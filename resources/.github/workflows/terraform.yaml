# name: terraform
# on: pull_request
# env:
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   TERRAFORM_VERSION: "0.12.31"
#   TFLINT_VERSION: "v0.28.0"
#   AWS_DEFAULT_REGION: "us-east-1"
#   TF_WORKSPACE: "stage"
#
#
# jobs:
#   fmt:
#     name: terraform fmt
#     runs-on: ubuntu-20.04
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v2.3.4
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1.3.2
#         with:
#           terraform_version: ${{ env.TERRAFORM_VERSION }}
#           cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
#       - name: terraform format
#         run: terraform fmt -recursive -check -diff
#   terraform-validate:
#     name: terraform validate
#     runs-on: ubuntu-20.04
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v2.3.4
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1.3.2
#         with:
#           terraform_version: ${{ env.TERRAFORM_VERSION }}
#           cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
#
#       - name: terraform init
#         run: terraform init
#       - name: terraform validate
#         run: terraform validate
#   tflint:
#     name: tflint
#     runs-on: ubuntu-20.04
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v2.3.4
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1.3.2
#         with:
#           terraform_version: ${{ env.TERRAFORM_VERSION }}
#           cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
#
#       - name: terraform init
#         run: terraform init
#       - name: tflint
#         uses: reviewdog/action-tflint@v1.10.0
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           fail_on_error: true
#           filter_mode: file
#           tflint_version: ${{ env.TFLINT_VERSION }}
#           level: warning
#   tfsec:
#     name: tfsec
#     runs-on: ubuntu-20.04
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v2.3.4
#       - name: checkout custom checks
#         uses: actions/checkout@v2.3.4
#         with:
#           repository: boost-insurance/terraform-tfsec-custom-checks
#           token: ${{ secrets.GH_BOOSTDROID_PAT }}
#           path: custom-checks
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1.3.2
#         with:
#           terraform_version: ${{ env.TERRAFORM_VERSION }}
#           cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
#
#       - name: terraform init
#         run: terraform init
#       - name: tfsec
#         uses: reviewdog/action-tfsec@v1.7.0
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           fail_on_error: true
#           filter_mode: file
#           tfsec_flags: "--exclude-downloaded-modules --custom-check-dir=custom-checks"
#           level: warning
#   checkov:
#     name: checkov
#     runs-on: ubuntu-20.04
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v2.3.4
#       - name: setup terraform
#         uses: hashicorp/setup-terraform@v1.3.2
#         with:
#           terraform_version: ${{ env.TERRAFORM_VERSION }}
#           cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
#       - name: checkov
#         uses: bridgecrewio/checkov-action@v12
#         with:
#           directory: .
#           quiet: true
#           framework: terraform
#   misspell:
#     name: misspell
#     runs-on: ubuntu-20.04
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v2.3.4
#       - name: misspell
#         uses: reviewdog/action-misspell@v1.7.1
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           locale: "US"
#           level: warning
#           filter_mode: file
